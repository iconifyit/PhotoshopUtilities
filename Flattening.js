function main() {	var doc = app.activeDocument;	doc.selection.selectAll();	flattening(doc, doc.selection.bounds);}function flattening(group, bounds) {	var doc = app.activeDocument;	for (var i = 0; i < group.layers.length; ++i) {		var layer = group.layers[i];		if (layer.name.indexOf(' (flat)') != -1) {			if (layer.typename == 'LayerSet') {				layer.visible = true;				layer = layer.merge();			}			var tmpGrp = app.activeDocument.layerSets.add();			var tmpGrpLyr = tmpGrp.artLayers.add();			tmpGrp.move(layer, ElementPlacement.PLACEBEFORE);			layer.move(tmpGrpLyr, ElementPlacement.PLACEBEFORE);			tmpGrp.name = layer.name.split(' (flat)')[0];			tmpGrp.blendMode = layer.blendMode;			tmpGrp.opacity = layer.opacity;			layer.opacity = 100;			var flattened = tmpGrp.merge();			doc.activeLayer = flattened;			var selection = doc.selection;			selection.select([				[bounds[0], bounds[1]],				[bounds[2], bounds[1]],				[bounds[2], bounds[3]],				[bounds[0], bounds[3]]			]);			selection.invert();			try {				deleteSelected();			} catch(e) { }		} else if (layer.name.indexOf(' (remove)') != -1) {			layer.remove();			--i;		} else if (layer.typename == 'LayerSet') {			doc.activeLayer = layer;			if (layer.name == 'Top Case')				'';			if (checkLayerMask()) {				selectMask();				var layerBounds = doc.selection.bounds;				layerBounds = [					Math.max(bounds[0], layerBounds[0]),					Math.max(bounds[1], layerBounds[1]),					Math.min(bounds[2], layerBounds[2]),					Math.min(bounds[3], layerBounds[3])				];				flattening(layer, layerBounds);			} else {				flattening(layer, bounds);			}		}	}}function sTID(id) { return app.stringIDToTypeID(id); }function cTID(id) { return app.charIDToTypeID(id); }function deleteSelected() { executeAction(cTID('Dlt '), undefined, DialogModes.NO); }function checkLayerMask() {  var ref = new ActionReference();  ref.putEnumerated(cTID('Lyr '), cTID('Ordn'), cTID('Trgt'));  var desc = executeActionGet(ref);  return desc.getBoolean(sTID('hasUserMask'));}function selectMask() {	var desc = new ActionDescriptor();	var ref = new ActionReference();	ref.putProperty(cTID('Chnl'), cTID('fsel'));	desc.putReference(cTID('null'), ref);	var ref1 = new ActionReference();	ref1.putEnumerated(cTID('Chnl'), cTID('Ordn'), cTID('Trgt'));	desc.putReference(cTID('T   '), ref1);	desc.putInteger(cTID('Vrsn'), 1);	desc.putBoolean(sTID('maskParameters'), true);	executeAction(cTID('setd'), desc, DialogModes.NO);}app.activeDocument.suspendHistory('Template', 'main();');